#####################################################################
#  Maitenance Macros
#####################################################################

[gcode_macro NOZZLE_CHANGE]
gcode:
        {% if printer.toolhead.homed_axes != 'xyz' %}
                G28
        {% endif %}
	G90
        G1 Z5 F6000
        G1 X180 Y50 Z5 F6000
	      G1 Z150 F600

# Heatsoaking
[gcode_macro HEATSOAK]
gcode:
  {% set bed_temp = params.BED_TEMP|default(110)|int %}
  {% if printer.idle_timeout.state != "Printing" %}
    SAVE_GCODE_STATE NAME=HEATSOAK
    M141 S55                       ; set chamber for 55C max
    M140 S{bed_temp}                      ; Set bed
    M104 S160                      ; Set hotend
    PARKBED                        ; Move to position
    RESTORE_GCODE_STATE NAME=HEATSOAK
  {% else %}
    { action_respond_info("HEATSOAK routine disabled while printing!") }
  {% endif %}

#####################################################################
#  Macros
#####################################################################
#
# You can specify the park_pos variable manually if you do not want 
# to use a _USER_VARIABLE macro, The set statement would look like:
# {% set park_pos = [x_val,y_val,z_val] %}
# e.g.
# {% set park_pos = [175,172,30.5] %}
#
#####################################################################
[gcode_macro PARKFRONT]
description: Park head front high
gcode:
  ##### Get user defines #####
  {% set park_pos = printer['gcode_macro _USER_VARIABLE'].park_front %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=STATE_PARK
  CG28 ; home if not already homed
  G90   ; absolute positioning
  G0 X{park_pos[0]} Y{park_pos[1]} Z{park_pos[2]} F18000
  RESTORE_GCODE_STATE NAME=STATE_PARK
  
[gcode_macro PARKFRONTLOW]
description: Park head front low
gcode:
  ##### Get user defines #####
  {% set park_pos = printer['gcode_macro _USER_VARIABLE'].park_frontlow %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=STATE_PARK
  CG28 ; home if not already homed
  G90   ; absolute positioning
  G0 X{park_pos[0]} Y{park_pos[1]} Z{park_pos[2]} F18000
  RESTORE_GCODE_STATE NAME=STATE_PARK

[gcode_macro PARKFRONTLOW]
description: Park head front low
gcode:
  ##### Get user defines #####
  {% set park_pos = printer['gcode_macro _USER_VARIABLE'].park_frontmid %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=STATE_PARK
  CG28 ; home if not already homed
  G90   ; absolute positioning
  G0 X{park_pos[0]} Y{park_pos[1]} Z{park_pos[2]} F18000
  RESTORE_GCODE_STATE NAME=STATE_PARK


[gcode_macro PARKREAR]
description: Park head rear high
gcode:
  ##### Get user defines #####
  {% set park_pos = printer['gcode_macro _USER_VARIABLE'].park_rear %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=STATE_PARK
  CG28 ; home if not already homed
  G90   ; absolute positioning
  G0 X{park_pos[0]} Y{park_pos[1]} Z{park_pos[2]} F18000
  RESTORE_GCODE_STATE NAME=STATE_PARK
   
[gcode_macro PARKCENTER]
description: Park head middle of printer
gcode:
  ##### Get user defines #####
  {% set park_pos = printer['gcode_macro _USER_VARIABLE'].park_center %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=STATE_PARK
  CG28 ; home if not already homed
  G90   ; absolute positioning
  G0 X{park_pos[0]} Y{park_pos[1]} Z{park_pos[2]} F18000
  RESTORE_GCODE_STATE NAME=STATE_PARK
   
[gcode_macro PARKBED]
description: Park head middle of bed low
gcode:
  ##### Get user defines #####
  {% set park_pos = printer['gcode_macro _USER_VARIABLE'].park_bed %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=STATE_PARK
  CG28 ; home if not already homed
  G90   ; absolute positioning
  G0 X{park_pos[0]} Y{park_pos[1]} Z{park_pos[2]} F18000
  RESTORE_GCODE_STATE NAME=STATE_PARK

[delayed_gcode _CHECK_FILTER]
initial_duration: 5
gcode:
  ## Micro need exchange every 80h
  {% set Fh = (printer.save_variables.variables.filterusetime / 3600)|int %}
  {% if Fh|int >= 80 %}
    M117 Change Filter!
    {action_respond_info("Change Filter material at Micro!")}
    UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
  {% endif %}

[delayed_gcode _CHECK_BELTS]
initial_duration: 5
gcode:
  ## Micro need exchange every 80h
  {% set Bh = (printer.save_variables.variables.beltusetime / 3600)|int %}
  {% if Bh|int >= printer['gcode_macro _USER_VARIABLE'].belt_use_time|int %}
    M117 Check belts!
    {action_respond_info("Check blet tention!")}
    UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
  {% endif %}

[delayed_gcode _CHECK_SERVICE]
initial_duration = 5
gcode: 
  {% set Si = (printer.save_variables.variables.lastservicetime / 3600)|int %}
  {% if Si|int >= printer['gcode_macro _USER_VARIABLE'].service_time|int %}
    M117 It's time for service!!!
  	{action_respond_info("Service NOW!")}
	UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
  {% endif %}
  
[gcode_macro RST_FILTER]
gcode:
  SAVE_VARIABLE VARIABLE=filterusetime VALUE=0
  {action_respond_info("Flter used time reseted to zero")}

[gcode_macro RST_BELTS]
gcode:
  SAVE_VARIABLE VARIABLE=beltusetime VALUE=0
  {action_respond_info("Belts used time reseted to zero")}
  
[gcode_macro RST_SERVICE]
gcode:
  SAVE_VARIABLE VARIABLE=lastservicetime VALUE=0
  {action_respond_info("Time since last service reseted to zero")}
