#####################################################################
#  Homing Macros
#####################################################################

[homing_override]
axes: z
set_position_z: 0
gcode:
  ##### get user defines #####
  # use -10 as default to insure it error in case the variable is not existing
  {% set z_endstop = printer['gcode_macro _USER_VARIABLE'].z_endstop|default([-10,-10]) %}
  {% set z_endstop_hop = printer['gcode_macro _USER_VARIABLE'].z_endstop_hop %}
  {% set park_pos = printer['gcode_macro _USER_VARIABLE'].park_bed %}
  {% set z_hop = printer['gcode_macro _USER_VARIABLE'].z_hop %}
  #####  set default  #####
  {% set park = params.PARK|default('true') %}
  ##### get toolhead position #####
  {% set act_z = printer.toolhead.position.z|float %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=STATE_HOMING
  STATUS_HOMING
  #{% if "z" not in printer.toolhead.homed_axes %}
    G0 Z{z_endstop_hop} F900 ; lift nozzle
  #{% endif %}
  ## reduce current of Z motors
  _SET_ACC VAL=HOME
  #_SET_Z_CURRENT VAL=HOME
  # Home X and Y only for G28 or G28 XYZ
  {% if 'Z' in params|upper %}
    {% if "x" not in printer.toolhead.homed_axes %}
      G28 X
    {% endif %}
    {% if "y" not in printer.toolhead.homed_axes %}
      G28 Y
    {% endif %}
  {% else %}
    G28 X
    G28 Y
  {% endif %}      
  ##	XY Location of the Z Endstop Switch
  G0  X{z_endstop[0]} Y{z_endstop[1]} F7200 
  # Home Z
  G28 Z
  ## move nozzle from pin
  #G0 Z2 F300
  ## return to org current settings
  #_SET_Z_CURRENT
  _SET_ACC
  # Lift Z
  G0 Z{z_hop} F1800
  {% if park|lower == 'true' %}
    G90
    G0 Z{park_pos[2]} F1800           ; move nozzle to z high first
    G0 X{park_pos[0]} Y{park_pos[1]} F18000 ; home to get toolhead in the middle
  {% endif %}
  RESTORE_GCODE_STATE NAME=STATE_HOMING
  STATUS_READY

## conditional home
[gcode_macro CG28]
description: Helper: Conditional homing
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
  {% endif %}

# Conditional QGL
[gcode_macro CQGL]
gcode:
  {% if printer.quad_gantry_level.applied|lower == 'false' %}
    QUAD_GANTRY_LEVEL
  {% endif %}



